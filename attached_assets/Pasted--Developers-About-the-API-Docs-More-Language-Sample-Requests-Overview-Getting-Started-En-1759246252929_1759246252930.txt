
|Developers
About the API
Docs
More

Language
Sample Requests
Overview
Getting Started
Enable the API
Sample Requests
Contribute Feedback
Common Use Cases
You can generate API client libraries using the Google API Client Libraries. There are some examples below of how to set up your API library with some of the most common languages.

 

Make an AnalyzeComment request
Run one of the sample API calls below to get scores directly from Perspective API.

 

The AnalyzeComment method issues an API request to analyze the comment.text field for the requestedAttributes, in this case the TOXICITY model. Use the API key you generated as the key parameter. (If you prefer, you can leverage the doNotStore flag to ensure that all submitted comments are automatically deleted after scores are returned.) 

 

Read the API reference documentation for details on all of the request and response fields, as well as the available values for requestedAttributes. There are experimental attributes, such as "obscene", "attack on a commenter", "spam", etc., that you may also use.

 

Python
Here is a sample request and response using the Python version of the Google API Client Libraries. 

 

Install the Python client library.
Run the following commands:
 

Python
Docs > Sample Requests > Python
from googleapiclient import discovery
import json

API_KEY = 'copy-your-api-key-here'

client = discovery.build(
  "commentanalyzer",
  "v1alpha1",
  developerKey=API_KEY,
  discoveryServiceUrl="https://commentanalyzer.googleapis.com/$discovery/rest?version=v1alpha1",
  static_discovery=False,
)

analyze_request = {
  'comment': { 'text': 'friendly greetings from python' },
  'requestedAttributes': {'TOXICITY': {}}
}

response = client.comments().analyze(body=analyze_request).execute()
print(json.dumps(response, indent=2))
 from googleapiclient import discovery
import json

API_KEY = 'copy-your-api-key-here'

client = discovery.build(
  "commentanalyzer",
  "v1alpha1",
  developerKey=API_KEY,
  discoveryServiceUrl="https://commentanalyzer.googleapis.com/$discovery/rest?version=v1alpha1",
  static_discovery=False,
)

analyze_request = {
  'comment': { 'text': 'friendly greetings from python' },
  'requestedAttributes': {'TOXICITY': {}}
}

response = client.comments().analyze(body=analyze_request).execute()
print(json.dumps(response, indent=2))
You should see something like:

 

Docs > Sample Requests > Python 3
{
  "attributeScores": {
    "TOXICITY": {
      "spanScores": [
        {
          "begin": 0,
          "end": 30,
          "score": {
            "value": 0.24173126,
            "type": "PROBABILITY"
          }
        }
      ],
      "summaryScore": {
        "value": 0.24173126,
        "type": "PROBABILITY"
      }
    }
  },
  "languages": [
    "en"
  ],
  "detectedLanguages": [
    "en"
  ]
}
 {
  "attributeScores": {
    "TOXICITY": {
      "spanScores": [
        {
          "begin": 0,
          "end": 30,
          "score": {
            "value": 0.24173126,
            "type": "PROBABILITY"
          }
        }
      ],
      "summaryScore": {
        "value": 0.24173126,
        "type": "PROBABILITY"
      }
    }
  },
  "languages": [
    "en"
  ],
  "detectedLanguages": [
    "en"
  ]
}
Our friendly greeting got a low toxicity score, whew.

 

Node.js
Here is a sample request and response using the Node.js version of the Google API Client Libraries. 

 

Install the Node.js client library or install the npm package googleapis.
Run the following commands:
 

Node.js
Docs > Sample Requests > Node.js
const {google} = require('googleapis');

API_KEY = 'copy-your-api-key-here';
DISCOVERY_URL =
    'https://commentanalyzer.googleapis.com/$discovery/rest?version=v1alpha1';

google.discoverAPI(DISCOVERY_URL)
    .then(client => {
      const analyzeRequest = {
        comment: {
          text: 'Jiminy cricket! Well gosh durned it! Oh damn it all!',
        },
        requestedAttributes: {
          TOXICITY: {},
        },
      };

      client.comments.analyze(
          {
            key: API_KEY,
            resource: analyzeRequest,
          },
          (err, response) => {
            if (err) throw err;
            console.log(JSON.stringify(response.data, null, 2));
          });
    })
    .catch(err => {
      throw err;
    });
 const {google} = require('googleapis');

API_KEY = 'copy-your-api-key-here';
DISCOVERY_URL =
    'https://commentanalyzer.googleapis.com/$discovery/rest?version=v1alpha1';

google.discoverAPI(DISCOVERY_URL)
    .then(client => {
      const analyzeRequest = {
        comment: {
          text: 'Jiminy cricket! Well gosh durned it! Oh damn it all!',
        },
        requestedAttributes: {
          TOXICITY: {},
        },
      };

      client.comments.analyze(
          {
            key: API_KEY,
            resource: analyzeRequest,
          },
          (err, response) => {
            if (err) throw err;
            console.log(JSON.stringify(response.data, null, 2));
          });
    })
    .catch(err => {
      throw err;
    });
You should see something like:

 

Docs > Sample Requests > Node.js 2
{
   "attributeScores":{
      "TOXICITY":{
         "spanScores":[
            {
               "score":{
                  "value":0.4445836,
                  "type":"PROBABILITY"
               }
            }
         ],
         "summaryScore":{
            "value":0.4445836,
            "type":"PROBABILITY"
         }
      }
   },
   "languages":[
      "en"
   ]
}
 {
   "attributeScores":{
      "TOXICITY":{
         "spanScores":[
            {
               "score":{
                  "value":0.4445836,
                  "type":"PROBABILITY"
               }
            }
         ],
         "summaryScore":{
            "value":0.4445836,
            "type":"PROBABILITY"
         }
      }
   },
   "languages":[
      "en"
   ]
}
Which shows that our old timey exclamations get lower toxicity scores.

 

There is also a ready-made Node.js client, which can be installed from NPM:

npm install perspective-api-client



See the docs on the project's GitHub page.

 

cURL
Here is a sample request and response with cURL. The following command should work for most Mac and Linux users. You may need to install cURL to run this command.

 

Replace YOUR_KEY_HERE with your API key.

cURL
Docs > Sample Requests > cURL
curl -H "Content-Type: application/json" --data \
    '{comment: {text: "what kind of idiot name is foo?"},
       languages: ["en"],
       requestedAttributes: {TOXICITY:{}} }' \
https://commentanalyzer.googleapis.com/v1alpha1/comments:analyze?key=YOUR_KEY_HERE
 curl -H "Content-Type: application/json" --data \
    '{comment: {text: "what kind of idiot name is foo?"},
       languages: ["en"],
       requestedAttributes: {TOXICITY:{}} }' \
https://commentanalyzer.googleapis.com/v1alpha1/comments:analyze?key=YOUR_KEY_HERE
In the following response, the field attributeScores.TOXICITY.summaryScore.value gives the toxicity model's score for the comment. The comment received a score of 0.9 out of 1.0.

 

Docs > Sample Requests > cURL 2
{
   "attributeScores":{
      "TOXICITY":{
         "summaryScore":{
            "value":0.9208521,
            "type":"PROBABILITY"
         }
      }
   },
   "languages":[
      "en"
   ]
}
 {
   "attributeScores":{
      "TOXICITY":{
         "summaryScore":{
            "value":0.9208521,
            "type":"PROBABILITY"
         }
      }
   },
   "languages":[
      "en"
   ]
}
Learn more about attribute scores in Key Concepts.

|Support
Providing support and resources to enable developers to build and experiment with Perspective API.

PrivacySite TermsAPI TermsÂ© Google2025
About
Perspective Developers
Perspective API
Jigsaw
Resources
About the API
Documentation
Contact Us
Connect
API Updates
Jigsaw Blog
Docs - Sample Requests